//Traversal in Tree by different methods
#include <stdio.h>
#include<stdlib.h>


    struct node{
        int data;
        struct node*left;
        struct node*right;
    };
    struct node*Create(int val){
        struct node*p=(struct node*)malloc(sizeof(struct node));
        p->data=val;
        p->left=NULL;
        p->right=NULL;
        return(p);
    };
    struct node*LC(int val,struct node*root){
        struct node*p=Create(val);
        root->left=p;
        
    };
    struct node*RC(int val,struct node*root){
        struct node*p=Create(val);
        root->right=p;
    };
    void preorder(struct node*root){
        if (root==NULL)
        return;
        printf("Preorder Traversal: \t");
        printf("%d \n",root->data);
        preorder(root->left);
        preorder(root->right);
        
    }
    void inorder(struct node*root){
        if (root==NULL)
        return;
        inorder(root->left);
        printf("Inorder Traversal: \t");
        printf("%d \n",root->data);
        inorder(root->right);
    }
     void postorder(struct node*root){
        if (root==NULL)
        return;
        postorder(root->left);
        postorder(root->right);
        printf("Postorder Traversal: \t");
        printf("%d \n",root->data);
    }
    
    int main() {
    printf("Tree traversals of the enterred elements are as follows: \n");
    struct node*root=Create(1);
    LC(2,root);
    RC(6,root);
    LC(4,root->left);
    RC(5,root->right);
    do{
    printf("\n");
    preorder(root);
    printf("\n");
    inorder(root);
    printf("\n");
    postorder(root);
    } while(root->val!=4);
    
    
    
    
    
    

    return 0;
   }
